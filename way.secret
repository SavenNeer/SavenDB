如何实现:

codebag中的代码在错误处理方面并不完全:
1.需要建立专门的错误矫正模块负责错误信息的重编写
2.为防止原slt系统级别的命令运行 需要加入在命令输入端过滤器

需要建立独立的用户权限机制 大致需要:
3.用户账户与密码管理 包括加密解密机制
4.用户表级别的权限记录与访问控制机制
5.需要支持简单的grant和revoke语句

需要建立对表基本结构的解析器:
6.可以考虑使用原slt系统级别的接口 但是建议手动使用正则表达式维护

需要存在具体文件:
7.数据内容文件[.tbs] 二进制文件
8.索引基本信息文件[.index]
9.用户账户文件[.usr]
10.权限文件[.right]

需要在外壳代码中添加索引的被使用情形:
11.添加具体的使用过程即可 代码量要高

需要支持自身系统的基本命令与使用说明:
12.查看数据库/索引/视图 [help database]
13.查看表信息 [help table <table>]
14.查看视图信息 [help view <view>]
15.查看索引信息 [help index <index>]


先建立好系统
然后添加上外壳代码
在外壳代码上引用内核系统
最后建立好脚本对程序的控制机制
运行脚本以构建项目

脚本需要能够多次迭代 最好是引用了环境变量

